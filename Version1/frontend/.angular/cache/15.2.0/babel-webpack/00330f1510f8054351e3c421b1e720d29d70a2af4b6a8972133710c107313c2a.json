{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nlet BoardComponent = class BoardComponent {\n  constructor(piecesService) {\n    this.piecesService = piecesService;\n    this.sixtyFour = [];\n    this.legend = [];\n    this.destroy$ = new Subject();\n    this.pieceArr = [];\n    this.movePiece = new FormGroup({\n      positionMove: new FormControl('', Validators.required)\n    });\n  }\n  xy(i) {\n    return {\n      x: i % 8,\n      y: Math.floor(i / 8)\n    };\n  }\n  isBlack({\n    x,\n    y\n  }) {\n    return (x + y) % 2 === 1;\n  }\n  onSubmit() {\n    console.log(\"Button pressed \" + this.movePiece.value.positionMove);\n    this.piecesService.makeMove(this.movePiece.value.positionMove).subscribe(data => {\n      console.log('message::::', data);\n      this.movePiece.reset();\n      this.updateBoard(data);\n      this.movePiece.value.positionMove = '';\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n  ngOnInit() {\n    this.sixtyFour = new Array(64).fill(0).map((_, i) => i);\n    this.legend = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n    this.piecesService.getData().subscribe(data => {\n      this.updateBoard(data);\n    });\n  }\n  updateBoard(data) {\n    this.pieceArr = Object.values(data).toString().split('/');\n    console.log(data);\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (parseInt(this.pieceArr[i][j]) <= 8 && parseInt(this.pieceArr[i][j]) > 0) {\n          let blankSpace = \"\";\n          for (let blank = parseInt(this.pieceArr[i][j]); blank > 0; blank--) {\n            blankSpace += \" \";\n          }\n          let pre = 1;\n          let post = this.pieceArr.length - 1;\n          if (j - 1 > 0) {\n            pre = j - 1;\n          }\n          if (j + 1 < this.pieceArr.length) {\n            post = j + 1;\n          }\n          if (j != 0 && j != this.pieceArr.length) {\n            this.pieceArr[i] = this.pieceArr[i].slice(0, post - 1) + blankSpace + this.pieceArr[i].slice(post);\n          } else if (j == 0) {\n            this.pieceArr[i] = blankSpace + this.pieceArr[i].slice(1);\n          } else if (j == this.pieceArr.length) {\n            this.pieceArr[i] = this.pieceArr[i].slice(0, pre) + blankSpace;\n          }\n        }\n      }\n    }\n  }\n};\nBoardComponent = __decorate([Component({\n  selector: \"app-board\",\n  templateUrl: \"./board.component.html\",\n  styleUrls: [\"./board.component.css\"]\n})], BoardComponent);\nexport { BoardComponent };","map":{"version":3,"mappings":"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","names":["Component","FormGroup","FormControl","Validators","Subject","BoardComponent","constructor","piecesService","positionMove","required","xy","i","x","y","Math","floor","isBlack","onSubmit","console","log","movePiece","value","makeMove","subscribe","data","reset","updateBoard","ngOnDestroy","destroy$","next","unsubscribe","ngOnInit","sixtyFour","Array","fill","map","_","legend","getData","pieceArr","Object","values","toString","split","j","parseInt","blankSpace","blank","pre","post","length","slice","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\hassa\\OneDrive\\Desktop\\University\\Semester 2\\SWENG\\SwEng-Group24\\Version1\\frontend\\src\\app\\board\\board.component.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { Coord } from \"../class/coord\";\r\nimport { PiecesService } from \"../services/pieces.service\";\r\nimport { Response } from \"../class/response\";\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Component({\r\n    selector: \"app-board\",\r\n    templateUrl: \"./board.component.html\",\r\n    styleUrls: [\"./board.component.css\"]\r\n})\r\nexport class BoardComponent {\r\n    \r\n    constructor(private piecesService: PiecesService) {  \r\n    }\r\n    \r\n    sixtyFour:number[] = []\r\n    legend:string[] = []\r\n    \r\n    xy(i: number) {\r\n        return {\r\n            x: i % 8,\r\n            y: Math.floor(i / 8)\r\n        }\r\n    }\r\n\r\n    isBlack({ x, y }: Coord) {\r\n        return (x + y) % 2 === 1;\r\n    }\r\n    destroy$: Subject<boolean> = new Subject<boolean>();\r\n    pieceArr: string[] = [];\r\n    movePiece = new FormGroup({\r\n        positionMove: new FormControl('', Validators.required),\r\n    });\r\n\r\n    onSubmit() {\r\n        console.log(\"Button pressed \" + this.movePiece.value.positionMove)\r\n        this.piecesService.makeMove(this.movePiece.value.positionMove).subscribe(data => {\r\n            console.log('message::::', data);\r\n            this.movePiece.reset();\r\n            this.updateBoard(data);\r\n            this.movePiece.value.positionMove = '';\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next(true);\r\n        this.destroy$.unsubscribe();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.sixtyFour = new Array(64).fill(0).map((_, i) => i);\r\n        this.legend = ['A','B','C','D','E','F','G','H'];\r\n        this.piecesService.getData().subscribe(data => {\r\n            this.updateBoard(data);\r\n        })\r\n    }\r\n\r\n    updateBoard(data: Object) {\r\n        this.pieceArr = Object.values(data).toString().split('/')\r\n        console.log(data)\r\n        for (let i = 0; i < 8; i++) {\r\n            for (let j = 0; j < 8; j++) {\r\n                if (parseInt(this.pieceArr[i][j]) <= 8 && parseInt(this.pieceArr[i][j]) > 0) {\r\n                    let blankSpace = \"\"\r\n                    for (let blank = parseInt(this.pieceArr[i][j]); blank > 0; blank--) {\r\n                        blankSpace += \" \"\r\n                    }\r\n                    let pre = 1;\r\n                    let post = this.pieceArr.length - 1;\r\n                    if (j - 1 > 0) {\r\n                        pre = j - 1\r\n                    }\r\n                    if (j + 1 < this.pieceArr.length) {\r\n                        post = j + 1\r\n                    }\r\n                    if (j != 0 && j != this.pieceArr.length) {\r\n                        this.pieceArr[i] = this.pieceArr[i].slice(0, post - 1) + blankSpace \r\n                        + this.pieceArr[i].slice(post);\r\n                    }\r\n                    else if (j == 0) {\r\n                        this.pieceArr[i] = blankSpace + this.pieceArr[i].slice(1);\r\n                    }\r\n                    else if (j == this.pieceArr.length) {\r\n                        this.pieceArr[i] = this.pieceArr[i].slice(0, pre) + blankSpace;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}